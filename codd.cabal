cabal-version: 2.0

name:           codd
version:        0.1.6
description:    Codd is a simple-to-use CLI tool that applies plain postgres SQL migrations atomically with strong and automatic cross-environment schema equality checks. README at <https://github.com/mzabani/codd#readme>
homepage:       https://github.com/mzabani/codd#readme
bug-reports:    https://github.com/mzabani/codd/issues
author:         Marcelo Zabani
maintainer:     mzabani@gmail.com
copyright:      2025 Marcelo Zabani
license:        BSD3
license-file:   LICENSE
build-type:     Simple
extra-source-files:
    README.md

source-repository head
  type: git
  location: https://github.com/mzabani/codd

library
  exposed-modules:
      Codd
      Codd.Analysis
      Codd.AppCommands.AddMigration
      Codd.AppCommands.VerifySchema
      Codd.AppCommands.WriteSchema
      Codd.Environment
      Codd.Representations
      Codd.Representations.Database
      Codd.Representations.Database.Model
      Codd.Representations.Database.Pg12
      Codd.Representations.Database.Pg13
      Codd.Representations.Database.Pg14
      Codd.Representations.Database.Pg15
      Codd.Representations.Database.Pg16
      Codd.Representations.Database.Pg17
      Codd.Representations.Database.SqlGen
      Codd.Representations.Disk
      Codd.Representations.Types
      Codd.Timing
      Codd.Internal
      Codd.Internal.MultiQueryStatement
      Codd.Internal.Retry
      Codd.InternalSchema.V1
      Codd.InternalSchema.V2
      Codd.InternalSchema.V3
      Codd.InternalSchema.V4
      Codd.InternalSchema.V5
      Codd.Logging
      Codd.Parsing
      Codd.Prelude
      Codd.Query
      Codd.Types
  other-modules:
      Paths_codd
  autogen-modules:
      Paths_codd
  hs-source-dirs:
      src
  default-extensions:
      BangPatterns
      DeriveAnyClass
      DeriveFunctor
      DeriveGeneric
      DerivingStrategies
      DerivingVia
      LambdaCase
      FlexibleContexts
      FlexibleInstances
      GADTs
      GeneralizedNewtypeDeriving
      MultiParamTypeClasses
      NamedFieldPuns
      NumericUnderscores
      OverloadedStrings
      RankNTypes
      RecordWildCards
      ScopedTypeVariables
      StandaloneDeriving
      TupleSections
      TypeApplications
      TypeFamilies
      TypeFamilyDependencies
      TypeOperators
      ViewPatterns
  -- -optP-Wno-nonportable-include-path fixes macOS builds: https://github.com/haskell/cabal/issues/4739#issuecomment-359209133
  ghc-options: -O2 -Wall -Wincomplete-uni-patterns -Wpartial-fields -optP-Wno-nonportable-include-path
  build-depends:
      aeson >= 2
    , aeson-pretty
    , ansi-terminal
    , attoparsec
    , base
    , bytestring
    , clock
    , containers
    , deepseq
    , dlist
    , filepath
    , formatting
    , hashable
    , haxl
    , mtl
    , network-uri
    , postgresql-libpq
    , postgresql-simple
    , resourcet
    , streaming
    , text
    , time
    , transformers
    , unliftio
    , unliftio-core
    , unordered-containers
    , uuid
    , vector
  default-language: Haskell2010

executable codd
  main-is: Main.hs
  other-modules:
      Paths_codd
  autogen-modules:
      Paths_codd
  hs-source-dirs:
      app
  default-extensions:
      BangPatterns
      DeriveAnyClass
      DeriveFunctor
      DeriveGeneric
      DerivingStrategies
      DerivingVia
      LambdaCase
      FlexibleContexts
      FlexibleInstances
      GADTs
      GeneralizedNewtypeDeriving
      MultiParamTypeClasses
      NamedFieldPuns
      OverloadedStrings
      RankNTypes
      RecordWildCards
      ScopedTypeVariables
      StandaloneDeriving
      TupleSections
      TypeApplications
      TypeFamilies
      TypeFamilyDependencies
      TypeOperators
      ViewPatterns
  -- Disabling the parallel GC seems to make codd perform better in some heavier workloads I've tested.
  -- This makes sense, codd is single-threaded.
  -- -optP-Wno-nonportable-include-path fixes macOS builds: https://github.com/haskell/cabal/issues/4739#issuecomment-359209133
  ghc-options: -O2 -threaded -rtsopts "-with-rtsopts=-maxN2 -qg" -Wall -Wincomplete-uni-patterns -Wpartial-fields -optP-Wno-nonportable-include-path
  build-depends:
      base
    , codd
    , optparse-applicative
    , postgresql-simple
    , text
    , time
  default-language: Haskell2010

benchmark codd-bench
  type: exitcode-stdio-1.0
  main-is: Main.hs
  hs-source-dirs: bench
  -- -optP-Wno-nonportable-include-path fixes macOS builds: https://github.com/haskell/cabal/issues/4739#issuecomment-359209133
  ghc-options: -O2 -threaded -rtsopts "-with-rtsopts=-maxN2 -qg -T" -Wall -Wpartial-fields -optP-Wno-nonportable-include-path
  default-extensions:
      BangPatterns
      DeriveAnyClass
      DeriveFunctor
      DeriveGeneric
      DerivingStrategies
      DerivingVia
      LambdaCase
      FlexibleContexts
      FlexibleInstances
      GADTs
      GeneralizedNewtypeDeriving
      MultiParamTypeClasses
      NamedFieldPuns
      NumericUnderscores
      OverloadedStrings
      RankNTypes
      RecordWildCards
      ScopedTypeVariables
      StandaloneDeriving
      TupleSections
      TypeApplications
      TypeFamilies
      TypeFamilyDependencies
      TypeOperators
      ViewPatterns
  build-depends:
    aeson >= 2
    , base
    , codd
    , criterion-measurement >= 0.2.0.0
    , deepseq
    , hspec
    , hspec-core
    , hspec-expectations
    , statistics
    , streaming
    , text
    , vector
  default-language: Haskell2010

test-suite codd-test
  type: exitcode-stdio-1.0
  main-is: Main.hs
  other-modules:
      AllSpecs
      DbDependentSpecs.AnalysisSpec
      DbDependentSpecs.AppCommandsSpec
      DbDependentSpecs.ApplicationSpec
      DbDependentSpecs.BackgroundJobsSpec
      DbDependentSpecs.RetrySpec
      DbDependentSpecs.SchemaVerificationSpec
      DbDependentSpecs.InvariantsSpec
      DbUtils
      EnvironmentSpec
      LiftedExpectations
      ParsingSpec
      Paths_codd
      SystemResourcesSpecs.OpenFilesSpec
      TypesGen
      TxnConstraintsSpecs.ValidConstructsSpec
      WritingReadingRepresentationsSpec
  autogen-modules:
      Paths_codd
  hs-source-dirs:
      test
  default-extensions:
      BangPatterns
      DeriveAnyClass
      DeriveFunctor
      DeriveGeneric
      DerivingStrategies
      LambdaCase
      FlexibleContexts
      FlexibleInstances
      GADTs
      GeneralizedNewtypeDeriving
      MultiParamTypeClasses
      NamedFieldPuns
      NumericUnderscores
      OverloadedStrings
      RankNTypes
      RecordWildCards
      ScopedTypeVariables
      StandaloneDeriving
      TupleSections
      TypeApplications
      TypeFamilies
      TypeFamilyDependencies
      TypeOperators
      ViewPatterns
  -- -optP-Wno-nonportable-include-path fixes macOS builds: https://github.com/haskell/cabal/issues/4739#issuecomment-359209133
  ghc-options: -O2 -threaded -rtsopts "-with-rtsopts=-maxN2 -qg" -Wunused-packages -optP-Wno-nonportable-include-path
  -- Until https://github.com/input-output-hk/haskell.nix/issues/231 is resolved,
  -- do not include hspec-discover in system-build-tools. We hack around the issue
  -- in default.nix so both cabal and nix build work.
  -- build-tools:
  --     hspec-discover
  build-depends:
      aeson >= 2
    , attoparsec
    , base
    , codd
    , containers
    , filepath
    , hashable
    , hspec
    , hspec-core
    , mtl
    , network-uri
    , postgresql-simple
    , QuickCheck
    , random
    , resourcet
    , streaming
    , text
    , time
    , typed-process
    , unliftio
    , uuid
  default-language: Haskell2010
